{
	"name": "bazel-vscode-java",
	"displayName": "Bazel extension for Java(TM) Language Support by Salesforce Engineering",
	"description": "Bazel support for Java Linting, Intellisense, formatting, refactoring and more...",
	"author": "Salesforce Engineering",
	"license": "BSD-3-Clause",
	"version": "1.1.0",
	"publisher": "sfdc",
	"bugs": "https://github.com/salesforce/bazel-vscode-java/issues",
	"preview": true,
	"engines": {
		"vscode": "^1.80.0"
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/salesforce/bazel-vscode-java"
	},
	"categories": [
		"Programming Languages",
		"Linters",
		"Formatters",
		"Snippets",
		"Other"
	],
	"keywords": [
		"multi-root ready",
		"Bazel",
		"Java"
	],
	"activationEvents": [
		"onLanguage:java",
		"workspaceContains:**/*.bazelproject",
		"workspaceContains:**/WORKSPACE",
		"workspaceContains:**/BUILD",
		"workspaceContains:**/*.bazel"
	],
	"main": "./out/src/extension.js",
	"contributes": {
		"javaExtensions": [
			"./server/com.github.ben-manes.caffeine.jar",
			"./server/com.github.ben-manes.caffeine.guava.jar",
			"./server/org.jsr-305.jar",
			"./server/org.fusesource.jansi.jar",
			"./server/wrapped.com.google.protobuf.protobuf-java.jar",
			"./server/com.salesforce.bazel.logback.jar",
			"./server/com.salesforce.bazel.importedsource.jar",
			"./server/com.salesforce.bazel.sdk.jar",
			"./server/com.salesforce.bazel.eclipse.core.jar",
			"./server/com.salesforce.bazel.eclipse.jdtls.jar"
		],
		"javaBuildFilePatterns": [
			"^WORKSPACE(\\.bazel)?$",
			"^BUILD(\\.bazel)?$",
			".*\\.bazelproject$",
			".*\\.java$"
		],
		"languages": [
			{
				"id": "bazelproject",
				"aliases": [
					"bazelproject",
					"bazelproject"
				],
				"extensions": [
					".bazelproject"
				],
				"configuration": "./syntaxes/bazelproject-language-configuration.json"
			}
		],
		"grammars": [
			{
				"language": "bazelproject",
				"scopeName": "source.bazelproject",
				"path": "./syntaxes/bazelproject.tmLanguage.json"
			}
		],
		"taskDefinitions": [
			{
				"type": "bazel",
				"required": [
					"name",
					"task"
				],
				"properties": {
					"name": {
						"type": "string",
						"description": "User readable bazel run target name"
					},
					"task": {
						"type": "string",
						"description": "The full bazel command to be executed"
					}
				}
			}
		],
		"configuration": {
			"title": "BJLS",
			"properties": {
				"java.import.bazel.disabled": {
					"type": "boolean",
					"default": false,
					"description": "Disable the Bazel importer.",
					"scope": "window"
				},
				"java.bazel.log.level": {
					"type": "string",
					"enum": [
						"debug",
						"warn",
						"info",
						"error",
						"trace"
					],
					"default": "info",
					"description": "Configure detailed logging (debug, warn, info, error)",
					"scope": "window"
				},
				"bazel.projectview.open": {
					"type": "boolean",
					"default": true,
					"description": "Open the Bazel Project View file on extension activation",
					"scope": "window"
				}
			}
		},
		"commands": [
			{
				"command": "java.bazel.syncProjects.command",
				"title": "Synchronize Projects with Bazel Project View",
				"category": "Java"
			},
			{
				"command": "java.bazel.syncDirectoriesOnly.command",
				"title": "Synchronize only directories",
				"category": "Bazel"
			},
			{
				"command": "java.bazel.updateClasspaths.command",
				"title": "Refresh classpath from Bazel BUILD file",
				"category": "Java"
			},
			{
				"command": "java.bazel.debug.command",
				"title": "Debug LS",
				"category": "Bazel"
			},
			{
				"command": "java.bazel.showStatus",
				"title": "Show Bazel Build Status",
				"category": "Bazel"
			},
			{
				"command": "bazelTaskOutline.refresh",
				"title": "Refresh Bazel Run Configs",
				"category": "Bazel",
				"icon": "$(sync)"
			},
			{
				"command": "bazelTaskOutline.run",
				"title": "Run Bazel Target",
				"category": "Bazel",
				"icon": "$(debug-start)"
			},
			{
				"command": "bazelTaskOutline.kill",
				"title": "Kill Bazel Target",
				"category": "Bazel",
				"icon": "$(debug-stop)"
			},
			{
				"command": "bazel.projectview.open",
				"title": "Open the Bazel Project View file",
				"category": "Bazel"
			}
		],
		"views": {
			"explorer": [
				{
					"id": "bazelTaskOutline",
					"name": "Bazel Run Targets"
				}
			]
		},
		"menus": {
			"commandPalette": [
				{
					"command": "java.bazel.syncProjects.command",
					"when": "javaLSReady"
				},
				{
					"command": "java.bazel.updateClasspaths.command",
					"when": "javaLSReady && isFileSystemResource"
				},
				{
					"command": "java.bazel.debug.command",
					"when": "javaLSReady && isFileSystemResource"
				},
				{
					"command": "bazelTaskOutline.refresh",
					"when": "false"
				},
				{
					"command": "bazelTaskOutline.run",
					"when": "false"
				},
				{
					"command": "bazelTaskOutline.kill",
					"when": "false"
				},
				{
					"command": "bazel.projectview.open",
					"when": "isBazelWorkspaceRoot"
				}
			],
			"explorer/context": [
				{
					"command": "java.bazel.syncProjects.command",
					"when": "javaLSReady",
					"group": "1_javaactions@10"
				},
				{
					"command": "java.bazel.updateClasspaths.command",
					"when": "javaLSReady && isFileSystemResource",
					"group": "1_javaactions@11"
				}
			],
			"view/title": [
				{
					"command": "bazelTaskOutline.refresh",
					"when": "view == bazelTaskOutline",
					"group": "navigation@1"
				}
			],
			"view/item/context": [
				{
					"command": "bazelTaskOutline.run",
					"when": "view == bazelTaskOutline && viewItem == task",
					"group": "inline@1"
				},
				{
					"command": "bazelTaskOutline.kill",
					"when": "view == bazelTaskOutline && viewItem == runningTask",
					"group": "inline@2"
				}
			]
		}
	},
	"scripts": {
		"vscode:prepublish": "run-s clean esbuild:base -- --minify",
		"build": "run-s clean build:server esbuild:base",
		"build:server": "gulp build_or_download",
		"clean": "npx rimraf out meta.json stats.html *.vsix",
		"esbuild:base": "tsx build.ts",
		"esbuild:watch": "npm run esbuild:base -- --sourcemap --watch",
		"analyze": "npm run esbuild:base -- --minify --metafile --analyze && esbuild-visualizer --metadata ./meta.json --open",
		"lint": "eslint src --ext ts",
		"lint:fix" : "eslint src --ext ts --fix",
		"test": "run-s clean test:*",
		"test:compile": "tsc -b ./test/tsconfig.json",
		"test:lint": "eslint --ext .js,.ts,.tsx src",
		"test:repo": "gulp repo_check",
		"test:extension": "node ./out/test/runTest.js",
		"package": "run-s clean build vsce:package",
		"vsce:package": "npx vsce package --no-dependencies"
	},
	"extensionDependencies": [
		"redhat.java"
	],
	"devDependencies": {
		"@types/glob": "^8.1.0",
		"@types/mocha": "^8.0.4",
		"@types/node": "^20.7.1",
		"@types/vscode": "^1.80.0",
		"@typescript-eslint/eslint-plugin": "^6.0.0",
		"@typescript-eslint/parser": "^6.0.0",
		"@vscode/test-electron": "^2.3.4",
		"@vscode/vsce": "^2.22.0",
		"esbuild": "0.19.8",
		"esbuild-plugin-eslint": "^0.3.7",
		"esbuild-visualizer": "^0.4.1",
		"eslint": "^8.45.0",
		"eslint-config-prettier": "^9.1.0",
		"eslint-plugin-prettier": "^5.1.2",
		"glob": "^10.3.4",
		"gulp": "^4.0.0",
		"gulp-decompress": "^3.0.0",
		"gulp-download": "^0.0.1",
		"gulp-filter": "^7.0.0",
		"gulp-regex-rename": "^0.1.0",
		"gulp-rename": "^2.0.0",
		"gulp-util": "^3.0.8",
		"mocha": "^10.2.0",
		"npm-run-all": "^4.1.5",
		"prettier": "^3.1.1",
		"rimraf": "^5.0.5",
		"tsx": "^4.6.0",
		"typescript": "^5.3.0",
		"vscode-languageclient": "^9.0.1"
	},
	"dependencies": {
		"fast-xml-parser": "^4.3.2"
	}
}
