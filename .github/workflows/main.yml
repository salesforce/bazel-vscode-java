name: main

on: 
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '11'

      - name: Build VSCode extension
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - run: sudo npm install -g vsce --unsafe-perm
      - run: npm install
      - run: npm run compile
      - run: vsce package
      - uses: actions/cache@v2
        with:
          path: |
            ./bazel-vscode-0.0.4.vsix 
          key: ${{ env.cache-name }}-${{ github.run_id }}
  publish:
    needs: [build]
    if: ${{ success() && contains(github.ref, 'master') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/cache@v2
        with:
          path: ./bazel-vscode-0.0.4.vsix 
          key: ${{ env.cache-name }}-${{ github.run_id }}
      - name: Create tag
        if: contains(github.ref, 'master')
        id: create_tag
        run: |
          tag=builds-$(date +%Y%m%d-%H%M%S)
          echo "::set-output name=tag::$tag"
      - name: Create Release
        if: contains(github.ref, 'master')
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.create_tag.outputs.tag }}
          release_name: ${{ steps.create_tag.outputs.tag }}
          draft: true
          prerelease: false
      - name: Upload Artifact
        if: contains(github.ref, 'master')
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bazel-vscode-0.0.4.vsix
          asset_name: bazel-vscode-0.0.4.vsix
          asset_content_type: application/octet-stream
      - name: Publish Release
        if: contains(github.ref, 'master')
        uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create_release.outputs.id }}
